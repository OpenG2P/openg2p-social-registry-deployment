questions:
- variable: hostname
  description: Hostname to access Social Registry
  type: string
  label: Hostname
  group: General Settings

- variable: global.keycloakBaseUrl
  description: Keycloak Base Url used in all components
  type: string
  label: Keycloak Base URL
  group: General Settings

- variable: odoo.oidcClientId
  description: OIDC Client ID for Social Registry
  type: string
  label: OIDC Client ID
  group: General Settings

- variable: odoo.oidcClientSecret
  description: OIDC Client Secret for Social Registry
  type: string
  label: OIDC Client Secret
  group: General Settings

# Mail Settings
- variable: mail.enabled
  description: This installs Mail server for relaying SMTP requests to preferred backend.
  type: boolean
  label: Install Mail SMTP Server?
  group: Mail Settings

# ODK Central Settings
- variable: odk-central.enabled
  description: This installs ODK Central.
  type: boolean
  label: Install ODK Central?
  group: ODK Central Settings

- variable: odk.hostname
  description: Hostname for ODK Central
  type: string
  label: ODK Central Hostname
  group: ODK Central Settings
  show_if: "odk-central.enabled=true"

- variable: odk-central.backend.envVars.OIDC_CLIENT_ID
  description: OIDC Client ID for ODK Central login
  type: string
  label: OIDC Client ID
  group: ODK Central Settings
  show_if: "odk-central.enabled=true"

- variable: odk-central.backend.envVars.OIDC_CLIENT_SECRET
  description: OIDC Client Secret for ODK Central login
  type: string
  label: OIDC Client Secret
  group: ODK Central Settings
  show_if: "odk-central.enabled=true"

# Minio Settings
- variable: minio.enabled
  description: This installs Minio for document store.
  type: boolean
  label: Install Minio?
  group: Minio Settings

- variable: minio.hostname
  description: Hostname for Minio Console
  type: string
  label: Minio Console Hostname
  group: Minio Settings
  show_if: "minio.enabled=true"

- variable: minio.oidcClientId
  description: OIDC Client ID for Minio Console login
  type: string
  label: OIDC Client ID
  group: Minio Settings
  show_if: "minio.enabled=true"

- variable: minio.oidcClientSecret
  description: OIDC Client Secret for Minio Console login
  type: string
  label: OIDC Client Secret
  group: Minio Settings
  show_if: "minio.enabled=true"

# Logging Settings
- variable: loggingFlow.enabled
  description: This will allow Fluentd to capture logs into OpenSearch.
  type: boolean
  label: Enable logs capture?
  group: Logging Settings

- variable: loggingOpensearch.enabled
  description: This installs OpenSearch for logging
  type: boolean
  label: Install OpenSearch?
  group: Logging Settings
  # show_if: "loggingFlow.enabled=true"

- variable: loggingFlow.opensearchInstallationName
  description: |-
    Edit this only if you want to reuse existing OpenSearch Installation.
    Else enable OpenSearch Installation from "General Settings".
  type: reference_service
  label: Existing OpenSearch Installation Name
  group: Logging Settings
  show_if: "loggingOpensearch.enabled=false&&loggingFlow.enabled=true"

- variable: loggingOpensearch.hostname
  description: Hostname for OpenSearch Dashboards
  type: string
  label: OpenSearch Dashboards Hostname
  group: Logging Settings
  show_if: "loggingOpensearch.enabled=true&&loggingFlow.enabled=true"

- variable: loggingOpensearch.oidcClientId
  description: OIDC Client ID for OpenSearch login
  type: string
  label: OIDC Client ID
  group: Logging Settings
  show_if: "loggingOpensearch.enabled=true&&loggingFlow.enabled=true"

- variable: loggingOpensearch.oidcClientSecret
  description: OIDC Client Secret for OpenSearch login
  type: string
  label: OIDC Client Secret
  group: Logging Settings
  show_if: "loggingOpensearch.enabled=true&&loggingFlow.enabled=true"

- variable: loggingOpensearch.loggingOutput.enabled
  description: This will allow Fluentd to send logs into this OpenSearch.
  type: boolean
  label: Fluentd Logs Output?
  group: Logging Settings
  show_if: "loggingOpensearch.enabled=true&&loggingFlow.enabled=true"

# Keymanager
- variable: keymanager.enabled
  description: This installs Keymanager for managing Keys for Encrpytion and Signatures
  type: boolean
  label: Install Keymanager?
  group: Keymanager Settings

- variable: odoo.keymanagerInstallationName
  description: |-
    Edit this only if you want to reuse existing Keymanager Installation.
    Else enable Keymanager Installation from "General Settings".
  type: reference_service
  label: Existing Keymanager Installation Name
  group: Keymanager Settings
  show_if: "keymanager.enabled=false"

- variable: keymanager.hostname
  description: Hostname under which Keymanager should be accessible
  type: string
  label: Keymanager Hostname
  group: Keymanager Settings
  show_if: "keymanager.enabled=true"

- variable: keymanager.springConfig.profile
  type: string
  label: Spring Config Profile
  group: Keymanager Settings
  show_if: "keymanager.enabled=true"

- variable: keymanager.springConfig.names
  type: string
  label: Spring Config Names
  group: Keymanager Settings
  show_if: "keymanager.enabled=true"

- variable: keymanager.springConfig.gitRepo.enabled
  description: Enables download of configs from Git repo.
  type: boolean
  label: Spring Config Git Enabled
  group: Keymanager Settings
  show_if: "keymanager.enabled=true"
  show_subquestion_if: true
  subquestions:
  - variable: keymanager.springConfig.gitRepo.repoUrl
    description: |-
      Repo Url for remote Git repo containing configs.
      This url should include username password if required.
    type: string
    label: Spring Config Git Repo Url
    group: Keymanager Settings

  - variable: keymanager.springConfig.gitRepo.branch
    description: Branch of remote Git repo containing configs.
    type: string
    label: Spring Config Git Repo Branch
    group: Keymanager Settings

- variable: keymanager.springConfig.rawConfig
  description: |-
    If git-based config is disabled, the complete application.properties can be
    directly supplied here.
  type: multiline
  label: Spring Config application properties.
  group: Keymanager Settings
  show_if: "keymanager.enabled=true&&keymanager.springConfig.gitRepo.enabled=false"

- variable: keymanager.envVars.auth_server_admin_allowed_audience
  description: |-
    List of Keycloak Client ID allowed to call this keymanager's APIs.
    Do not edit this parameter unless required.
  type: string
  label: Allowed Keycloak Client IDs.
  group: Keymanager Settings
  show_if: "keymanager.enabled=true"

# Reporting
- variable: reporting.enabled
  description: This installs Reporting Framework for that stream DB data to OpenSearch for Dashboards
  type: boolean
  label: Install Reporting Framework?
  group: Reporting Settings

- variable: reporting-init.enabled
  description: This initializes Reporting Connectors for Social Registry
  type: boolean
  label: Initialize Reporting Connectors (reporting-init)?
  group: Reporting Settings

- variable: reporting-init.reportingInstallationName
  description: |-
    If reporting is disabled with this installation, and if an installation of reporting
    already exists, give the name of existing installation here.
  type: string
  label: Reporting Installation Name
  group: Reporting Settings
  show_if: "reporting.enabled=false&&reporting-init.enabled=true"

# Reporting Kafka
- variable: reporting.kafka.enabled
  description: This installs Kafka along with the current reporting
  type: boolean
  label: Install Kafka?
  group: Reporting Settings
  show_if: "reporting.enabled=true"

- variable: reporting.kafkaUi.enabled
  description: This installs Kafka UI along with Kafka
  type: boolean
  label: Install Kafka UI?
  group: Reporting Settings
  show_if: "reporting.enabled=true&&reporting.kafka.enabled=true"

- variable: reporting.kafkaUi.hostname
  description: Hostname with which Kafka UI should be accessible
  type: string
  label: Kafka UI Hostname
  group: Reporting Settings
  show_if: "reporting.enabled=true&&reporting.kafka.enabled=true&&reporting.kafkaUi.enabled=true"

- variable: reporting.kafkaUi.oidcClientId
  description: OIDC Client ID for Kafka UI login
  type: string
  label: OIDC Client ID
  group: Reporting Settings
  show_if: "reporting.enabled=true&&reporting.kafka.enabled=true&&reporting.kafkaUi.enabled=true"

- variable: reporting.kafkaUi.oidcClientSecret
  description: OIDC Client Secret for Kafka UI login
  type: string
  label: OIDC Client Secret
  group: Reporting Settings
  show_if: "reporting.enabled=true&&reporting.kafka.enabled=true&&reporting.kafkaUi.enabled=true"

- variable: reporting.opensearch.enabled
  description: This installs OpenSearch for reporting
  type: boolean
  label: Install OpenSearch?
  group: Reporting Settings
  show_if: "reporting.enabled=true"

- variable: reporting-init.opensearchInstallationName
  description: |-
    Edit this only if you want to reuse existing OpenSearch Installation.
    Else enable OpenSearch Installation.
  type: reference_service
  label: Existing OpenSearch Installation Name
  group: Reporting Settings
  show_if: "reporting.opensearch.enabled=false&&reporting.enabled=true"

- variable: reporting.opensearch.hostname
  description: Hostname for OpenSearch Dashboards
  type: string
  label: OpenSearch Dashboards Hostname
  group: Reporting Settings
  show_if: "reporting.opensearch.enabled=true&&reporting.enabled=true"

- variable: reporting.opensearch.oidcClientId
  description: OIDC Client ID for OpenSearch login
  type: string
  label: OpenSearch OIDC Client ID
  group: Reporting Settings
  show_if: "reporting.opensearch.enabled=true&&reporting.enabled=true"

- variable: reporting.opensearch.oidcClientSecret
  description: OIDC Client Secret for OpenSearch login
  type: string
  label: OpenSearch OIDC Client Secret
  group: Reporting Settings
  show_if: "reporting.opensearch.enabled=true&&reporting.enabled=true"

# Reporting Init
- variable: reporting-init.gitConfig.enabled
  description: This enables downloading connectors and other Reporting-init configuration from Git.
  type: boolean
  label: Download reporting-init config from Git?
  group: Reporting Settings
  show_if: "reporting-init.enabled=true"

- variable: reporting-init.gitConfig.repoUrl
  description: Git Repository to download configs from. This must include username password if any.
  type: string
  label: Git Config Repository URL
  group: Reporting Settings
  show_if: "reporting-init.enabled=true&&reporting-init.gitConfig.enabled=true"

- variable: reporting-init.gitConfig.branch
  description: Git Repository Branch to download configs from.
  type: string
  label: Git Config Repository Branch
  group: Reporting Settings
  show_if: "reporting-init.enabled=true&&reporting-init.gitConfig.enabled=true"

- variable: reporting-init.gitConfig.subDir
  description: Subdirectory inside the Git Repository to take configs from.
  type: string
  label: Git Config Repository Subdirectory
  group: Reporting Settings
  show_if: "reporting-init.enabled=true&&reporting-init.gitConfig.enabled=true"
