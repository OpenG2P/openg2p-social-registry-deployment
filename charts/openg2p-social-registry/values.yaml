global:
  socialRegistryHostname: socialregistry.openg2p.sandbox.net
  odkHostname: odk.openg2p.sandbox.net
  minioHostname: minio.openg2p.sandbox.net
  mailname: openg2p.sandbox.net
  sysAdminEmail: admin@openg2p.sandbox.net

istio:
  enabled: true
  virtualservice:
    enabled: true
    host: ""
    gateway: "internal"
    destination: '{{ .Release.Name }}-odoo'
    destinationPort: '{{ .Values.odoo.service.port }}'
  gateway:
    enabled: false
    host: ""
    ingressController:
      istio: ingressgateway
    httpTlsRedirect: true
    httpEnabled: true
    httpsEnabled: false
    tls:
      mode: SIMPLE
      credentialName: ""

odoo:
  image:
    repository: openg2p/openg2p-social-registry-odoo-package
    tag: "17.0-develop-social-registry"
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 80

  # TODO: Remove this and use global.sysAdminEmail
  odooEmail: admin@openg2p.org

  postgresql:
    enabled: true
    primary:
      extendedConfiguration: |-
        wal_level = logical
        max_wal_senders = 20
        max_replication_slots = 10

  livenessProbe:
    enabled: false

  extraEnvVars:
  - name: ODOO_SKIP_MODULES_UPDATE
    value: "yes"
  - name: LIMIT_TIME_REAL
    value: "5000"
  - name: LIST_DB
    value: "False"
  - name: SERVER_WIDE_MODULES
    value: web,queue_job
  # not using bitnami smtpHost and smtpPort variables, because they need user and pass as well.
  - name: OPENG2P_SMTP_HOST
    value: "social-registry-mail"
  - name: OPENG2P_SMTP_PORT_NUMBER
    value: "25"
  - name: LOG_HANDLER
    value: "[':INFO']"
  - name: LOG_DB
    value: "False"

mail:
  enabled: true

odk-central:
  enabled: true
  odk-central-mail:
    enabled: false
  odk-central-backend:
    envVars:
      EMAIL_HOST: '{{ .Release.Name }}-mail'
      OIDC_ISSUER_URL: https://keycloak.openg2p.sandbox.net/realms/master
      OIDC_CLIENT_ID: ""
      OIDC_CLIENT_SECRET: ""

minio:
  enabled: true
  persistence:
    enabled: true
    size: 16Gi

  extraEnvVars:
  - name: MINIO_IDENTITY_OPENID_CONFIG_URL
    value: http://keycloak.openg2p.sandbox.net/realms/master/.well-known/openid-configuration
  - name: MINIO_IDENTITY_OPENID_CLIENT_ID
    value: openg2p-sr-minio
  - name: MINIO_IDENTITY_OPENID_CLIENT_SECRET
    value: ""
  - name: MINIO_IDENTITY_OPENID_DISPLAY_NAME
    value: Keycloak
  - name: MINIO_IDENTITY_OPENID_CLAIM_NAME
    value: client_roles
  - name: MINIO_IDENTITY_OPENID_SCOPES
    value: openid,profile,email
  - name: MINIO_IDENTITY_OPENID_REDIRECT_URI_DYNAMIC
    value: "on"
  - name: MINIO_IDENTITY_OPENID_CLAIM_USERINFO
    value: "on"

  istio:
    enabled: true
    virtualservice:
      enabled: true
      host: ""
      gateway: "internal"
      destination: '{{ .Release.Name }}-minio'
      destinationPort: "9001"
    gateway:
      enabled: false
      host: ""
      ingressController:
        istio: ingressgateway
      httpTlsRedirect: true
      httpEnabled: true
      httpsEnabled: false
      tls:
        mode: SIMPLE
        credentialName: ""

postgresIngress:
  enabled: false
  type: istio
  # TODO: Implement type: ingress
  istio:
    enabled: false
    virtualservice:
      enabled: true
      host: "*"
      gateway: ""
      matchPort: 5432
      destination: '{{ .Release.Name }}-postgresql'
      destinationPort: "5432"
    gateway:
      enabled: true
      port: 5432
      host: "*"
      ingressController:
        istio: ingressgateway
      tls:
        enabled: false
        mode: SIMPLE
        credentialName: ""
